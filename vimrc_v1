 
set nocompatible

" Specify a directory for plugins
" - For Neovim: ~/.local/share/nvim/plugged
" - Avoid using standard Vim directory names like 'plugin'
call plug#begin('~/.vim/plugged')

Plug 'rust-lang/rust.vim'
Plug 'majutsushi/tagbar'
Plug 'scrooloose/nerdtree'
Plug 'Yggdroot/LeaderF', { 'do': './install.sh' }
Plug 'Valloric/YouCompleteMe'
"Plug 'racer-rust/vim-racer'
Plug 'autozimu/LanguageClient-neovim', {
			\ 'branch': 'next',
			\ 'do': 'bash install.sh',
			\ }
Plug 'junegunn/fzf', { 'dir': '~/.fzf', 'do': './install --all' }
Plug 'Shougo/deoplete.nvim'
Plug 'roxma/nvim-yarp'
Plug 'roxma/vim-hug-neovim-rpc'
Plug 'tenfyzhong/CompleteParameter.vim'

Plug 'flazz/vim-colorschemes'

" Initialize plugin system
call plug#end()

set hidden

if has("autocmd")
	au BufReadPost * if line("'\"") > 1 && line("'\"") <= line("$") | exe "normal! g'\"" | endif
endif

" tagbar
  nmap <F8> :TagbarToggle<CR>

" NERDTree config
  map <F3> :NERDTreeToggle<CR>
  autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif
"  "第一条是说使用F3键快速调出和隐藏它；
"  "第二条是关闭vim时，如果打开的文件除了NERDTree没有其他文件时，它自动关闭，减少多次按:q!。
"  "如果想打开vim时自动打开NERDTree，可以如下设定
"  autocmd vimenter * NERDTree
"---------------------------------------------------------------

" LeaderF 
let g:Lf_ShortcutF = '<C-P>'
let g:Lf_RootMarkers = ['vnlib']
let g:Lf_WorkingDirectoryMode = 'ac'
let g:Lf_DefaultMode = 'FullPath'
let g:Lf_UseVersionControlTool = 0
let g:Lf_WildIgnore = {'dir': ['physx-c', 'target'], 'file': ['*.sw?','~$*','*.bak','*.exe','*.o','*.so','*.py[co]','*.bin']}

" LanguageClient
let g:LanguageClient_serverCommands = {
    \ 'rust': ['rls'],
	\}
let g:LanguageClient_trace = "off"
let g:LanguageClient_settingsPath = expand("~/.vim/settings.json")
"let g:LanguageClient_loggingFile = "/tmp/languageclien.log"
"let g:LanguageClient_loggingLevel = 'INFO'
"let g:LanguageClient_serverStderr = "/tmp/rls.log"
nnoremap <silent> <C-]> :call LanguageClient#textDocument_definition()<CR>
nnoremap <F5> :call LanguageClient_contextMenu()<CR>
" Or map each action separately
nnoremap <silent> K :call LanguageClient#textDocument_hover()<CR>
nnoremap <silent> <F2> :call LanguageClient#textDocument_rename()<CR>

" deoplete
let g:deoplete#enable_at_startup = 0 
"let g:python3_host_prog = '/usr/bin/python3'
autocmd InsertEnter * call deoplete#enable()

" YouCompleteMe
"let g:ycm_rust_src_path="/home/wxk/.rustup/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/src/rust/src/"
"let g:ycm_global_ycm_extra_conf='/home/wxk/.ycm_extra_conf.py'
"" 一些方便的快捷键
""" 在 Normal 模式下, 敲 <leader>jd 跳转到定义或声明(支持跨文件)
nnoremap <silent> gd :YcmCompleter GoTo<CR>
nnoremap <silent> gv :YcmCompleter GetDoc<CR><C-w>k
""" 在 Insert 模式下, 敲 <leader>; 补全
inoremap <leader>; <C-x><C-o>

" vim-racer
" au FileType rust nmap gd <Plug>(rust-def)
au FileType rust nmap gs <Plug>(rust-def-split)
au FileType rust nmap gx <Plug>(rust-def-vertical)
au FileType rust nmap <leader>gd <Plug>(rust-doc)

" CompleteParameter
inoremap <silent><expr> ( complete_parameter#pre_complete("()")
smap <c-j> <Plug>(complete_parameter#goto_next_parameter)
imap <c-j> <Plug>(complete_parameter#goto_next_parameter)
smap <c-k> <Plug>(complete_parameter#goto_previous_parameter)
imap <c-k> <Plug>(complete_parameter#goto_previous_parameter)

set number
set tabstop=4
set cindent shiftwidth=4
set incsearch
set hlsearch

map <F9> $a   /**<  */<ESC>hhi
map <F10> ko<esc>i/**<CR><ESC>a * \brief<CR><ESC>a *<CR><ESC>a * \param<CR><ESC>a *<CR><ESC>a * \return<CR><ESC>a */<ESC><S-v>6k=j$a 
inoremap <F9>    /**<  */<ESC>hhi
inoremap jj <esc>
"inoremap <F8> Zebra::logger->debug("");<ESC>2hi
inoremap <F7> Zebra::logger->debug("%s %u", __PRETTY_FUNCTION__, __LINE__);<ESC>
map<F11> ni\<ESC>n

"" 开启rust的自动reformat的功能
"let g:rustfmt_autosave = 1


"set paste "粘贴时打开按原样粘贴
"set signcolumn=yes

set t_Co=256
syntax enable
"let g:solarized_termcolors=256

"colorscheme desert
"colorscheme molokai
"colorscheme Monokai
colorscheme solarized
"colorscheme murphy

set background=dark

set completeopt=menuone
set backspace=indent,eol,start

"if exists('$TMUX')
"	set term=linux
"endif
